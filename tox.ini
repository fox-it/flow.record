[tox]
envlist = lint, py3, pypy3
# This version of tox will autoprovision itself and the requirements defined in
# requires if they are not available on the host system. This requires the
# locally installed tox to have a minimum version 3.3.0. This means the names
# of the configuration options are still according to the tox 3.x syntax.
minversion = 4.2.4
# This version of virtualenv will install setuptools version 65.5.0 and pip
# 22.3. These versions fully support python projects defined only through a
# pyproject.toml file (PEP-517/PEP-518/PEP-621)
requires = virtualenv>=20.16.6

[testenv]
deps =
    pytest
    pytest-cov
    coverage
extras = test
commands =
# Capturing output will fail on pypy, possibly due to this issue: https://github.com/pytest-dev/pytest/issues/5502
    pytest --basetemp="{envtmpdir}" {posargs:--color=yes --capture=no --cov=flow --cov-report=term-missing -v tests}
    coverage report
    coverage xml

[testenv:build]
package = skip
deps =
    build
commands =
    pyproject-build

[testenv:fix]
package = skip
deps =
    black==23.1.0
    isort==5.11.4
commands =
    black flow tests
    isort flow tests

[testenv:lint]
package = skip
deps =
    black==23.1.0
    flake8
    flake8-black
    flake8-isort
    isort==5.11.4
    vermin
commands =
    flake8 flow tests
    vermin -t=3.8- --no-tips --lint --exclude zoneinfo flow tests

[flake8]
max-line-length = 120
extend-ignore =
    # See https://github.com/PyCQA/pycodestyle/issues/373
    E203,
statistics = True
exclude = flow/record/version.py

[testenv:docs-build]
allowlist_externals = make
deps =
    sphinx
    sphinx-autoapi
    sphinx_argparse_cli
    sphinx-copybutton
    sphinx-design
    furo
commands =
    make -C tests/docs clean
    make -C tests/docs html

[testenv:docs-linkcheck]
allowlist_externals = make
deps = {[testenv:docs-build]deps}
commands =
    make -C tests/docs clean
    make -C tests/docs linkcheck
